connect()
{
        echo "connect1,connect2,connect3,connect4,connect5,reconftw"
}
receive()
{
        echo "receive1,receive2,receive3,receive4,receive5,receive_recon"
}
connect1()
{
    ssh -i ~/aws/key.pem ubuntu@13.235.100.165
}
connect2()
{
    ssh -i ~/aws/key.pem ubuntu@13.127.167.89
}
connect3()
{
    ssh -i ~/aws/key.pem ubuntu@3.111.213.189
}
connect4()
{
    ssh -i ~/aws/key.pem ubuntu@13.127.118.119
}
connect5()
{
    ssh -i ~/aws/key.pem ubuntu@3.110.220.77
}
send1()
{

        scp -i "~/aws/key.pem" $1 ubuntu@13.235.100.165:/home/ubuntu/$2
}
send2()
{
        scp -i "~/aws/key.pem" $1 ubuntu@13.127.167.89:/home/ubuntu/$2
}
send3()
{
        scp -i "~/aws/key.pem" $1 ubuntu@3.111.213.189:/home/ubuntu/$2
}
send4()
{
        scp -i "~/aws/key.pem" $1 ubuntu@13.127.118.119:/home/ubuntu/$2
}
send5()
{
        scp -i "~/aws/key.pem" $1 ubuntu@3.110.220.77:/home/ubuntu/$2
}
receive1()
{

        scp -i "~/aws/key.pem" ubuntu@13.235.100.165:/home/ubuntu/$1 $2
}
receive2()
{
        scp -i "~/aws/key.pem"ubuntu@13.127.167.89:/home/ubuntu/$1 $2
}
receive3()
{
        scp -i "~/aws/key.pem"ubuntu@3.111.213.189:/home/ubuntu/$1 $2
}
receive4()
{
        scp -i "~/aws/key.pem" ubuntu@13.127.118.119:/home/ubuntu/$1 $2
}
receive5()
{
        scp -i "~/aws/key.pem" ubuntu@3.110.220.77:/home/ubuntu/$1 $2
}
whois_go()
{
	go run /mnt/c/Users/siddh/Desktop/programms/go/whois.go
	cat output.txt | sort -u >>output
	rm output.txt
	mv output output.txt
        split -n l/4 output.txt
}
whois_csv()
{
         go run /mnt/c/Users/siddh/Desktop/programms/go/whoiscsv.go
}
csv()
{
	curl -X POST https://reverse-whois.whoisxmlapi.com/api/v2 
   -H "Content-Type: application/json"
   -d '[{
    "apiKey": "at_5h38PhPOm4SQ1KAzza7rTyXifU9Pf",
    "searchType": "current",
    "mode": "purchase",
    "punycode": true,
    "searchAfter": 1654349253,
    "basicSearchTerms": {
        "include": [
            "Airbnb, Inc.",
            "US"
        ],
        "exclude": [
            "Europe",
            "EU"
        ]
    }
}]' 
}
reconftw()
{
        declare -i i=1
        input="/mnt/c/Users/siddh/Desktop/recondata/$1/domain.txt"
        while IFS= read -r line
        do 
                echo "$line" > f$i.txt
                send$i /mnt/c/Users/siddh/Desktop/recondata/$1/f$i.txt reconftw/Recon
                i=i+1        
        done < "$input"
}
send_all()
{
        declare -i i=1
        while [ $i -lt 6 ]
        do
                send$i $1 $2
                i=i+1
        done
}
reconftw_receive()
{
        declare -i i=1
        input="/mnt/c/Users/siddh/Desktop/recondata/$1/domain.txt"
        while IFS= read -r line
        do 
                receive$i reconftw/Recon/$line/web/webs.txt /mnt/c/Users/siddh/Desktop/recondata/$1
                i=i+1        
        done < "$input"
}
recon_do()
{
    for i in $(cat output.txt)
    do
        subfinder -d $i -all -silent 
        findomain -t $i -q
    done | tee -a subdomains.txt

    httpx -l subdomains.txt -sc -title -td -t 200 -location -cl -ct -ip -nc -o httpx.txt
    
    cat httpx.txt | awk '{print $7}' | tr -d '[]' | sort -u | tee -a ip_addresses.txt
    
    sudo masscan -p1-65535 -iL ip_addresses.txt --rate=2000 --open -oG masscan.txt 
    
    cat httpx.txt | awk '{print $1}' | sort -u | tee -a url.txt
    
    xargs -P `nproc` -I {} sh -c 'url="{}"; ffuf -mc all -H "X-Forwarded-For: 127.0.0.1" -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0" -u "{}/FUZZ" -w ~/wordlist/secret-files -t 200 -ac -se -o fuzz/${url##/}-${url%%:}.json' < url.txt
    cat fuzz/* | jq '[.results[]|{status: .status, length: .length, url: .url}]' | grep -oP "status\":\s(\d{3})|length\":\s(\d{1,7})|url\":\s\"(http[s]?:\/\/.*?)\"" | paste -d' ' - - - | awk '{print $2" "$4" "$6}' | sed 's/\"//g' > ffuf_result.txt
}
fuzz()
{
        mkdir fuzz
    xargs -P `nproc` -I {} sh -c 'url="{}"; ffuf -mc all -H "X-Forwarded-For: 127.0.0.1" -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0" -u "{}/FUZZ" -w ~/wordlist/secret-files -t 200 -ac -se -o fuzz/${url##/}-${url%%:}.json' < url.txt
    cat fuzz/* | jq '[.results[]|{status: .status, length: .length, url: .url}]' | grep -oP "status\":\s(\d{3})|length\":\s(\d{1,7})|url\":\s\"(http[s]?:\/\/.*?)\"" | paste -d' ' - - - | awk '{print $2" "$4" "$6}' | sed 's/\"//g' > ffuf_result.txt
}
src()
{
        source ~/.alias
}
alias()
{
        vi ~/.alias
}
